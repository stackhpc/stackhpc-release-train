---
- name: Check if release series exists on the remote  # noqa no-handler
  ansible.builtin.shell:
    cmd: |
      gh api \
      -H "Accept: application/vnd.github.v3+json" \
      /repos/{{ owner }}/{{ repository_manifest.name }}/git/ref/heads/{{ community_manifest.prefix | default("") }}{{ community_manifest.branch }}
  changed_when: false
  failed_when: false
  register: release_series_exists

- name: Proceed with adding community files
  when: release_series_exists.rc == 0
  block:
    - name: Check if working branch already exists on the remote
      ansible.builtin.shell:
        cmd: |
          gh api \
          -H "Accept: application/vnd.github.v3+json" \
          /repos/{{ owner }}/{{ repository_manifest.name }}/git/ref/heads/{{ community_manifest.prefix | default("") }}{{ community_manifest.branch }}-community-files
      changed_when: false
      failed_when: false
      register: branch_exists

    - name: Delete working branch from the remote
      ansible.builtin.shell:
        cmd: |
          gh api \
          --method DELETE \
          -H "Accept: application/vnd.github.v3+json" \
          /repos/{{ owner }}/{{ repository_manifest.name }}/git/refs/heads/{{ community_manifest.prefix | default("") }}{{ community_manifest.branch }}-community-files
      when: branch_exists.rc == 0

    - name: Create working branch # noqa command-instead-of-module
      ansible.builtin.shell:
        cmd: >
          git checkout -b {{ community_manifest.prefix | default("") }}{{ community_manifest.branch }}-community-files \
            origin/{{ community_manifest.prefix | default("") }}{{ community_manifest.branch }}
        chdir: "{{ staging_path }}/{{ repository_manifest.name }}"
      changed_when: true

    - name: Create .github directory
      ansible.builtin.file:
        path: "{{ staging_path }}/{{ repository_manifest.name }}/.github/"
        state: directory
        mode: "0755"

    - name: Copy community files
      ansible.builtin.copy:
        content: "{{ community_file.value.content }}"
        dest: "{{ staging_path }}/{{ repository_manifest.name }}/{{ community_file.value.dest }}"
        mode: "0644"
      register: community_copy
      with_dict: "{{ repository_manifest.community_files }}"
      loop_control:
        loop_var: community_file

    - name: Commit changes # noqa command-instead-of-module no-handler
      ansible.builtin.shell:
        cmd: |
          git add . --force && git commit -m \
          'feat: automatic update of community files {{ community_manifest.prefix | default("") }}{{ community_manifest.branch }}'
        chdir: "{{ staging_path }}/{{ repository_manifest.name }}"
      when: community_copy.changed | bool

    - name: Push branch to remote # noqa command-instead-of-module command-instead-of-shell no-handler
      ansible.builtin.shell:
        cmd: "git push -u origin {{ community_manifest.prefix | default('') }}{{ community_manifest.branch }}-community-files"
        chdir: "{{ staging_path }}/{{ repository_manifest.name }}"
      when: community_copy.changed | bool

    - name: Ensure required labels exists on remote  # noqa no-handler
      ansible.builtin.include_tasks: "tasks/add_label.yml"
      with_items:
        - automated
        - community-files
      loop_control:
        loop_var: label_name
      when: community_copy.changed | bool

    - name: Open pull request # noqa command-instead-of-shell no-handler
      ansible.builtin.shell:
        cmd: 'gh pr create -f -B {{ community_manifest.prefix | default("") }}{{ community_manifest.branch }} -l automated --label community-files'
        chdir: "{{ staging_path }}/{{ repository_manifest.name }}"
      when: community_copy.changed | bool

    - name: Pause playbook to prevent exceeding API rate limit # noqa no-handler
      ansible.builtin.pause:
        seconds: 10
      when: community_copy.changed | bool

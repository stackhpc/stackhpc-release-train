---
- name: Check if working branch already exists on the remote
  ansible.builtin.shell:
    cmd: |
      gh api \
      -H "Accept: application/vnd.github.v3+json" \
      /repos/{{ owner }}/{{ repository_manifest.name }}/git/ref/heads/{{ community_manifest.branch }}-community-files
  changed_when: false
  failed_when: false
  register: branch_exists

- name: Delete working branch from the remote
  ansible.builtin.shell:
    cmd: |
      gh api \
      --method DELETE \
      -H "Accept: application/vnd.github.v3+json" \
      /repos/{{ owner }}/{{ repository_manifest.name }}/git/refs/heads/{{ community_manifest.branch }}-community-files
  when: branch_exists.rc == 0

- name: Create working branch # noqa command-instead-of-module
  ansible.builtin.shell:
    cmd: >
      git checkout -b {{ community_manifest.branch }}-community-files \
        origin/{{ community_manifest.prefix | default("") }}{{ community_manifest.branch }}
    chdir: '{{ staging_path }}/{{ repository_manifest.name }}'
  changed_when: true

- name: Create .github directory
  ansible.builtin.file:
    path: '{{ staging_path }}/{{ repository_manifest.name }}/.github/'
    state: directory
    mode: 0755

- name: Copy community files
  ansible.builtin.copy:
    content: '{{ repository_manifest.codeowners }}'
    dest: '{{ staging_path }}/{{ repository_manifest.name }}/.github/CODEOWNERS'
    mode: 0755
  register: community_copy
  when: repository_manifest.codeowners | default('') | length > 0

- name: Commit changes # noqa command-instead-of-module no-handler
  ansible.builtin.shell:
    cmd: "git add . && git commit -m 'feat: automatic update of community files'"
    chdir: '{{ staging_path }}/{{ repository_manifest.name }}'
  when: community_copy.changed | bool

- name: Push branch to remote # noqa command-instead-of-module command-instead-of-shell no-handler
  ansible.builtin.shell:
    cmd: 'git push -u origin {{ community_manifest.branch }}-community-files'
    chdir: '{{ staging_path }}/{{ repository_manifest.name }}'
  when: community_copy.changed | bool

- name: Ensure required labels exists on remote
  ansible.builtin.include_tasks: 'tasks/add_label.yml'
  with_items:
    - stackhpc-ci
    - community-files
  loop_control:
    loop_var: label_name

- name: Open pull request # noqa command-instead-of-shell no-handler
  ansible.builtin.shell:
    cmd: 'gh pr create --fill --base {{ community_manifest.prefix | default("") }}{{ community_manifest.branch }} --label stackhpc-ci --label community-files'
    chdir: '{{ staging_path }}/{{ repository_manifest.name }}'
  when: community_copy.changed | bool

- name: Pause playbook to prevent exceeding API rate limit # noqa no-handler
  ansible.builtin.pause:
    seconds: 10
  when: community_copy.changed | bool

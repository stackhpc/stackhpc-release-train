---
name: Sync package repositories
on:
  workflow_dispatch:
    inputs:
      sync_ark:
        required: false
        description: Sync package repositories in Ark
        default: true
        type: boolean
      sync_test:
        required: false
        description: Sync package repositories in Test Pulp
        default: true
        type: boolean
      filter:
        description: Space-separated list of regular expressions matching short_name of repositories to sync
        type: string
        required: false
        default: ""
  schedule:
    # Daily at 2:17 and 23:17 for Ubuntu and non-Ubuntu packages respectively
    - cron: '17 2,23 * * *'

env:
  ANSIBLE_FORCE_COLOR: True
  ANSIBLE_VAULT_PASSWORD_FILE: ${{ github.workspace }}/vault-pass
jobs:
  package-sync-ark:
    name: Sync package repositories in Ark
    runs-on: ubuntu-latest
    if: inputs.sync_ark || github.event_name == 'schedule'
    steps:

    - name: Get automation filter
      id: filter
      run: echo "automation_filter=$CRON_FILTER" >> "$GITHUB_OUTPUT"
      env:
        # if running at 2:17, filter for ubuntu packages, otherwise filter against
        CRON_FILTER: ${{ github.event.schedule == '17 2 * * *' && 'ubuntu' || '^((?!ubuntu).)*$' }}

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Release Train & dependencies
      uses: ./.github/actions/setup
      with:
        vault-password: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        vault-password-file: ${{ env.ANSIBLE_VAULT_PASSWORD_FILE }}

    - name: Sync and publish package repositories in Ark
      run: |
        ansible-playbook -i ansible/inventory \
        ansible/dev-pulp-repo-sync.yml \
        ansible/dev-pulp-repo-publication-cleanup.yml \
        ansible/dev-pulp-repo-publish.yml \
        -e deb_package_repo_filter="'$FILTER'" \
        -e rpm_package_repo_filter="'$FILTER'"
      env:
        # If scheduled, use automation filter, else use input filter
        FILTER: ${{ github.event_name == 'schedule' && steps.filter.outputs.automation_filter || github.event.inputs.filter }}

  package-sync-test:
    name: Sync package repositories in test
    runs-on: [self-hosted, stackhpc-release-train]
    needs: package-sync-ark
    if: inputs.sync_test || github.event_name == 'schedule'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Release Train & dependencies
      uses: ./.github/actions/setup
      with:
        vault-password: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        vault-password-file: ${{ env.ANSIBLE_VAULT_PASSWORD_FILE }}

    - name: Sync and publish package repositories in test
      run: |
        ansible-playbook -i ansible/inventory \
        ansible/test-pulp-repo-version-query.yml \
        ansible/test-pulp-repo-sync.yml \
        ansible/test-pulp-repo-publication-cleanup.yml \
        ansible/test-pulp-repo-publish.yml \
        -e deb_package_repo_filter="'$FILTER'" \
        -e rpm_package_repo_filter="'$FILTER'"
      env:
        FILTER: ${{ github.event.inputs.filter }}
